class Solution {
    public ListNode reverse(ListNode curr){
        if(curr==null || curr.next==null) return curr;

        ListNode newh=reverse(curr.next);
        ListNode front=curr.next;
        front.next=curr;
        curr.next=null;
        return newh;
    }
    public boolean isPalindrome(ListNode head) {
        ListNode slow=head;
        ListNode fast=head;
        while(fast.next!=null && fast.next.next!=null){
            slow=slow.next;
            fast=fast.next.next;
        }
        ListNode newhead=reverse(slow.next);
        ListNode first=head,second=newhead;
        while(second!=null){
            if(first.val != second.val){
                reverse(newhead);
                return false;
            }
            else{
                first=first.next;
                second=second.next;
            }
        }
        reverse(newhead);
        return true;
    }
}
